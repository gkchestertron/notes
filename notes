#!/bin/bash

note() {
  # start a new heading and append from stdout
  if [ ! -z "$1" ]; then
    notes pull
    file=$(ls "$HOME/notes/notefiles/" | grep "$1")
    if [ -z "$file" ]
    then
      echo file not found
      return
    fi
    clear
    echo "" >> "$HOME/notes/notefiles/$file"
    cat "$HOME/notes/notefiles/$file"
    cat - >> "$HOME/notes/notefiles/$file"
    echo syncing notes - pushing to repo...
    notes push &>/dev/null &
    clear
    cat "$HOME/notes/notefiles/$file"

  # append to file from stdout
  else
    notes pull
    clear
    cat "$HOME/notes/notefiles/notes.md"
    cat - >> "$HOME/notes/notefiles/notes.md"
    echo syncing notes - pushing to repo...
    notes push &>/dev/null &
    clear
    cat "$HOME/notes/notefiles/notes.md"
  fi
}

notes() {
  cur_dir=$(pwd)

  if [ ! -z "$1" ]; then
    # commit and push if args are exactly "push"
    if [ "$1" = "push" ]; then
      echo syncing notes - pushing to repo...
      cd "$HOME/notes"
      git add -A
      git commit -m "update notes"
      git push
      cd $cur_dir

    # pull from github if args are exactly "pull"
    elif [ "$1" = "pull" ]; then
      echo syncing notes - pulling from repo...
      cd "$HOME/notes"
      git pull
      cd $cur_dir

    # serve with grip if args are exactly "serve"
    elif [ "$1" = "serve" ]; then
      file=""

      if [ ! -z "$2" ]
      then
        file="$2.md"

      # generate README.md for navigation if no file provided
      # also background it
      else 
        echo "# Here, have some notes" > "$HOME/notes/notefiles/README.md"
        echo "This file is autogenerated for grip server" >> "$HOME/notes/notefiles/README.md"
        echo "" >> "$HOME/notes/notefiles/README.md"

        for f in $HOME/notes/notefiles/*.md
        do
          name=${f##*/}
          base=${name%.md}

          if [ "$name" = "README.md" ]
          then
            continue
          fi
          echo "[$base]($name)" >> "$HOME/notes/notefiles/README.md"
          echo "" >> "$HOME/notes/notefiles/README.md"
        done
      fi

      running=$(ps aux | grep grip | grep -v grep)

      if [ "$2" = "kill" ]
      then
        echo killing server
        ps aux | grep grip | grep -v grep | awk '{print $(2)}' | xargs kill -9

      elif [ -z "$running" ]
      then
        open "http://localhost:6419"
        grip "$HOME/notes/notefiles/$file" &>/dev/null &
        disown
      else
        open "http://localhost:6419"
        echo notes server already running at http://localhost:6419
      fi

    # create a note file
    elif [ "$1" = "create" ]
    then
      echo "# $2" >> "$HOME/notes/notefiles/$2.md"
      notes "$2.md"

    # destroy a note file
    elif [ "$1" = "destroy" ]
    then
      echo "removing notefile: $2.md"
      rm "$HOME/notes/notefiles/$2.md"

    # open vim to search of the args
    else
      notes pull
      file=$(ls "$HOME/notes/notefiles/" | grep "$1")
      vim "$HOME/notes/notefiles/$file"
      echo syncing notes - pushing to repo...
      notes push &>/dev/null &
      disown
    fi

  # just open the notes
  else
    notes pull
    vim "$HOME/notes/notefiles/"
    echo syncing notes - pushing to repo...
    notes push &>/dev/null &
    disown
  fi
}
